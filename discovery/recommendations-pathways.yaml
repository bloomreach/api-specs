openapi: 3.0.2
info:
  title: Widget Api V2
  description: API Specification For Bloomreach Widget APIs
  version: 2.0.0
  contact:
    name: Metal
    email: metal@bloomreach.com

tags:
  - name: "widget"
    description: >-
      External Swagger API Specificiation for Bloomreach Widgets
    externalDocs:
      description: "Bloomreach Dev Docs"
      url: "https://help.bloomreach.com/"

components:
  parameters:
    auth-key:
      name: auth-key
      in: header
      description: >-
        Unique key shared during integration phase. This is used to authenticate a merchant API call.
      required: false
      schema:
        type: string
    widget_id:
      name: widget_id
      in: path
      description: ID of the widget
      required: true
      schema:
        type: string
    pp_search_category_widget_id:
      name: pp_search_category_widget_id
      in: path
      description: ID of the widget for past purchase/search/category
      required: true
      schema:
        type: string
    recently_viewed_widget_id:
      name: recently_viewed_widget_id
      in: path
      description: ID of the widget for recently Viewed
      required: true
      schema:
        type: string
    account_id:
      name: account_id
      in: query
      description: Valid Identifier for the Merchant
      required: true
      schema:
        type: string
    domain_key:
      name: domain_key
      in: query
      description: Valid site domain key for the account
      required: true
      schema:
        type: string
    _br_uid_2:
      name: _br_uid_2
      in: query
      description: Unique random user ID. Should be the same as the one fired via Pixel.
      required: true
      schema:
        type: string
        example: uid=sample:v=11.8:ts=1585222161176:hc=30
    url:    
      name: url
      in: query
      description: URL of the calling page. Used for analytics.
      required: true
      schema:
        type: string
        format: uri
        example: pathways.dxpapi.com/api/internal/swagger
    ref_url:
      name: ref_url
      in: query
      description: Referrer URL of the calling page
      required: false
      schema:
        type: string
        format: uri
        example: pathways.dxpapi.com/api/internal/swagger
    request_id:   
      name: request_id
      in: query
      description: Unique request ID created by client
      required: false
      schema:
        type: string 
    view_id:
      name: view_id
      in: query
      description: view id
      required: false
      schema:
        type: string 
    query:
      name: query
      in: query
      description: keyword for Search/PastPurchase API
      required: true
      schema:
        type: string
    fields:
      name: fields
      in: query
      description: Comma separated list of fields (will pick default configured in dashboard if not provided)
      required: false
      schema:
        type: string
    rows:
      name: rows
      in: query
      description: Number of results to returned (Default picked from Dashboard if not provided)
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 200
    start:
      name: start
      in: query
      description: start index for pagination. Note - Fallback flow only gets triggered for start value 0
      required: false
      schema:
        type: integer
        minimum: 0
    filter:
      name: filter
      in: query
      description: >-
        filter query to include/exclude items in the recall. Example - filter=-("color":("red" OR "blue"))&filter="price":["10" TO "1000"]
      required: false
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: Sort order based on numeric fields. Eg- "price asc", "title desc"
      required: false
      schema:
        type: string
    mandatory_user_id:
      name: user_id
      in: query
      description: Identifier for user on Merchant side (required for Past Purchase widget)
      required: true
      schema:
        type: string
    optional_user_id:
      name: user_id
      in: query
      description: Identifier for user on Merchant side. Add user_id based results to recall set.
      required: false
      schema:
        type: string
    item_ids:
      name: item_ids
      in: query
      description: Comma separated list of item ID's
      required: true
      schema:
        type: string
    cat_id:
      name: cat_id
      in: query
      description: required for category widgets 
      required: true
      schema:
        type: string
    catalog_name:
      name: catalog_name
      in: query
      description: catalog name of the feed  
      required: true
      schema:
        type: string
    segment:
      name: segment
      in: query
      description: segment identifier. Ranking happens only among items with that segment. Example - view_id:ie
      required: false
      schema:
        type: string
    facet:
      name: facet
      in: query
      description: Facets are disabled by default. To enable set facet=true
      required: false
      schema:
        type: string
  schemas:
    WidgetAPIResponse:
      title: WidgetAPIResponse
      description: >-
        Root widget response object 
      type: object
      properties:
        response:
          type: object
          $ref: '#/components/schemas/WidgetResponseObject'
        facet:
          type: object
          $ref: '#/components/schemas/FacetObject'
        metadata:
          type: object
          $ref: '#/components/schemas/MetaDataObject'
      example: |-
        {
          "response": {
            "rows": 2,
            "start": 0,
            "docs": [
                {
                  "pid": "prod-123",
                  "url": "some url",
                  "title": "title",
                  "sale_price": 234
                },
                {
                  "pid": "prod-223",
                  "url": "some url",
                  "title": "title",
                  "sale_price": 211
                }
              ],
          },
          "facet": {
            "ranges": [
              {
                "key": "slider_price",
                "value": [
                  {
                    "count": 100,
                    "start": 0,
                    "end": 500
                  },
                  {
                    "count": 120,
                    "start": 501,
                    "end": 1000
                  }
                ]
              },
              {
                "key": "price",
                "value": [
                  {
                    "count": 110,
                    "start": 0,
                    "end": 500                    
                  },
                  {
                    "count": 110,
                    "start": 501,
                    "end": 1000                    
                  }
                ]
              }
              ],
            "category": [
              {
                "count": 12,
                "cat_id": "some id",
                "cat_name": "sale",
                "children": [],
              },
              {
                "count": 44,
                "cat_id": "cat id",
                "cat_name": "home",
                "children": [
                  {
                    "count": 21,
                    "cat_id": "cat id",
                    "cat_name": "mens",
                    "children": [
                      {
                        "count": 12,
                        "cat_id": "cat_id",
                        "cat_name": "men's shirts",
                        "children": []
                      },
                      {
                        "count": 9,
                        "cat_id": "cat_id",
                        "cat_name": "men's t-shirts",
                        "children": []
                      }
                    ]
                  },
                  {
                    "count": 23,
                    "cat_id": "cat_id",
                    "cat_name": "boys",
                    "children": [
                      {
                        "count": 23,
                        "cat_id": "cat_id",
                        "cat_name": "boys' shirts",
                        "children": []
                      }
                    ]
                  }
                ]
              }  
            ],
            "fields": [
              {
                "key": "colour",
                "value": [
                  {
                    "count": 231,
                    "name": "black"
                  },
                  {
                    "count": 122,
                    "name": "red"
                  }
                ]
              },
              {
                "key": "brand",
                "value": [
                  {
                    "count": 101,
                    "name": "nike"
                  },
                  {
                    "count": 201,
                    "name": "puma"
                  }
                ]
              }              
            ],
            "query": {      
            }
          },
          "metadata": {
            "widget": {
              "rid": "some id",
              "id": "some id",
              "type": "mlt",
              "description": "some text",
              "name": "some text"
            },
            "query": {
              "did_you_mean": [
                "black",
                "block"
              ],
              "modification": {
                "mode": "autoCorrectQuery",
                "value": "black"
              }
            }            
          }
        }
        
    WidgetResponseObject:
      title: WidgetResponseObject 
      description: >- 
        Contains list of items and pagination details
      type: object
      properties:
        rows:
          type: number
        start:
          type: number
        docs:
          type: array
          items: 
            $ref: '#/components/schemas/WidgetResponseItem'
      example: |-
        {
          "rows": 12,
          "start": 0,
          "docs": []
        }
    
    WidgetResponseItem:
      title: WidgetResponseItem
      description: >-
        individual item details
      type: object
      properties:
        pid:
          type: string
        sale_price:
          type: number
          format: double
        price:
          type: number
          format: double
        url:
          type: string
        title:
          type: string
        thumb_image:
          type: string
        brand:
          type: string
        description:
          type: string
        style:
          type: string
        color:
          type: string
      required: 
        - pid
        - url
        - sale_price
        - title
        - thumb_image

      example: |-
        {
          "pid": "PBB322",
          "price": 1290
        }
    
    FacetObject:
      title: FacetRootObject
      description: >-
        facet node in response, contains category tree, facet fields and ranges
      type: object
      properties:
        category:
          type: array
          items: 
            $ref: '#/components/schemas/FacetCategoryObject'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/FacetFieldsObject'
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/FacetRangeObject'
        query:
          type: object
      example: |- 
        {
          "category": [],
          "fields": [],
          "ranges": [],
          "queries": {}
        }
    
    FacetFieldsObject:
      title: FacetFieldsObject
      description: >-
        facet fields
      type: array
      items:
        $ref: '#/components/schemas/FacetFieldsItem'
      example: |-
        {
          
        }   

    FacetFieldsItem:
      title: FacetFieldsItem
      description: >- 
        facet field item
      type: object
      properties:
        key:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/FacetFieldsValue'
      example: |-
        {
          
        }
        
    FacetFieldsValue:
      title: FacetFieldsValue
      description: >-
        facet field value
      type: object
      properties:
        count:
          type: number
        name:
          type: string
      example: |-
        {
          "count": 12,
          "type": "gucci"
        }
 
    FacetRangeObject:
      title: FacetRangeObject
      description: >-
        category tree
      type: array
      items:
        $ref: '#/components/schemas/FacetRangeItem'
      example: |-
        [
          {
            "key": "price",
            "value": [
                {
                  "start": 12,
                  "end": 25,
                  "count": 10 
                }
              ]
          },
          {
            "key": "sale_price",
            "value": [
                {
                  "start": 10,
                  "end": 30,
                  "count": 10 
                }
              ]
          }
        ]
          
    FacetRangeItem:
      title: FacetRangeItem
      description: >-
        facet range item
      type: object
      properties:
        key:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/FacetRangeValue'
      example: |-
        {
          "key": "price",
          "value": [
              {
                "start": 12,
                "end": 25,
                "count": 10 
              }
            ]
        }
    
    FacetRangeValue:
      title: FacetRangeValue
      description: >-
        facet range item
      type: object
      properties:
        count:
          type: number
        start:
          type: number
        end:
          type: number
      example: |-
        {
          "start": 12,
          "end": 25,
          "count": 10
        }
        
    FacetCategoryObject:
      title: FacetCategoryObject
      description: >-
        Category structure - category hierarchy along with product count in a tree structure 
      type: array
      items:
        $ref: '#/components/schemas/CategoryItem'
      example: |-
        {
          
        }
    
    CategoryItem:
      title: CategoryItem
      description: >-
        facet category item
      type: object
      properties:
        cat_id: 
          type: string
        cat_name: 
          type: string
        count:
          type: number
        children:
          type: array
          items:
            $ref: '#/components/schemas/CategoryItem'
      example: |-
        {
          "cat_id": "electronicswearables",
          "cat_name": "Wearables",
          "count": 147,
          "children":[]
        }
      
    MetaDataObject:
      title: MetaDataObject
      description: >-
        meta data object containing widget details and query auto correct
      type: object
      properties:
        widget:
          type: object
          $ref: '#/components/schemas/WidgetMetaObject'
        query: 
          type: object
          $ref: '#/components/schemas/QueryMetaObject'
        response:
          type: object
          $ref: '#/components/schemas/ResponseMetaObject'
      example: |- 
        {
            "widget": {
              "id": "Egkw5D",
              "rid": "5d13f7d2aaf7402581e9e3db3ca60083",
              "type": "mlt",
              "name": "my MLT widget",
              "description": "shows my MLT stuff"
            },
            "query": {
              
            } 
        }
        
    ResponseMetaObject:
      title: ResponseMetaObject
      description: >- 
        for storing response meta data 
      type: object
      properties:
        personalized_results:
          type: boolean
        fallback:
          type: string
      example: |- 
        {
          "personalized_results": true,
          "fallback": "mlt"
        }
    
    WidgetMetaObject:
      title: WidgetMetaObject
      description: >-
        widget meta data 
      type: object
      properties:
        id:
          type: string
        rid:
          type: string
        title:
          type: string
        type:
          type: string
        description:
          type: string
      example: |-
        {
            "id": "Egkw5D",
            "rid": "5d13f7d2aaf7402581e9e3db3ca60083",
            "type": "mlt",
            "name": "my MLT widget",
            "description": "shows my MLT stuff"
        }
        
    DidYouMeanItem:
      title: DidYouMeanItem
      description: >-
        autocorrected query
      type: string
      example: |-
        "black"
    
    QueryMetaObject:
      title: QueryMetaObject
      description: >-
        for showing auto corrected query information
      type: object
      properties: 
        did_you_mean:
          type: array
          items:
            $ref: '#/components/schemas/DidYouMeanItem'
        modification:
          type: object
          $ref: '#/components/schemas/QueryModificationObject'
      example: |-
        {
          "did_you_mean": ["black", "block"],
          "modification": {
            "mode": "auto_corrected_query",
            "value": "black"
          }
        }
    QueryModificationObject:
      title: QueryModificationObject
      description: >-
        query modification 
      type: object
      properties:
        mode:
          type: string
        value:
          type: string
      example: |-
        {
          "mode": "autoCorrectQuery",
          "value": "black"
        }

  examples:
    WidgetResponseExample:
      value:
        response:
          start: 0
          rows: 2
          docs:
            - pid: "prod1243"
              url: "some url"
              sale_price: 34.20
              title: "some title"
            - pid: "prod453"
              url: "some url"
              sale_price: 124.20
              title: "some title"
        facet: 
          ranges:
            - key: "slider_price"
              value: 
                - count: 10
                  start: 0
                  end: 500
                - count: 23
                  start: 501
                  end: 1000
            - key: "price"
              value:
                - count: 8
                  start: 0
                  end: 500
                - count: 25
                  start: 501
                  end: 1000
          fields:
            - key: "colour"
              value:
                - count: 231
                  name: "black"
                - count: 122
                  name: "red"
            - key: "brand"
              value:
                - count: 101
                  name: "nike"
                - count: 201
                  name: "puma"
          category:
            - count: 12
              cat_id: "some id"
              cat_name: "sale"
              children: 
                - empty_arry
            - count: 44
              cat_id: "cat id"
              cat_name: "home"
              children: 
                - count: 21
                  cat_id: "cat id"
                  cat_name: "mens"
                  children:
                    - count: 12
                      cat_id: "cat_id"
                      cat_name: "men's shirts"
                      children:
                    - count: 9
                      cat_id: "cat_id"
                      cat_name: "men's t-shirts"
                      children:
                - count: 23
                  cat_id: "cat_id"
                  cat_name: "boys"
                  children:
                    - count: 23
                      cat_id: "cat_id"
                      cat_name: "boys' shirts"
                      children:
          query:
          
        metadata: 
          widget:
            rid: "some id"
            id: "some id"
            type: "mlt"
            description: "some text"
            name: "some text"
          query:
            did_you_mean:
              - "black" 
              - "block"
            modification:
              mode: "autoCorrectQuery"
              value: "black" 
          response:
            personalized_results: false
            fallback: "mlt"

paths:
  /api/v2/widgets/global/{widget_id}:
    summary: Widget v2 api
    description: >-
      Widget v2 api for recs, search, category
    get:
      summary: For fetching Global Widgets like BestSellers, Trending, etc. Typically used on Context less pages like Home Page
      description: >-
        Returns results for different types of widgets like BestSellers, Trending, etc.
      tags:
        - "widget"
      responses:
        '200':
          description: Widget Api Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetAPIResponse'
              examples:
                'Example 1 ':
                  $ref: '#/components/examples/WidgetResponseExample'
        '400':
          description: If the query parameters are incorrect/invalid
        '401':
          description: If an invalid auth-key as passed along with the request
        '404':
          description: Must send 404 if the widget id is not valid

    parameters:
      - $ref: '#/components/parameters/auth-key'
      - $ref: '#/components/parameters/widget_id'
      - $ref: '#/components/parameters/account_id'
      - $ref: '#/components/parameters/domain_key'
      - $ref: '#/components/parameters/_br_uid_2'
      - $ref: '#/components/parameters/url'
      - $ref: '#/components/parameters/ref_url'
      - $ref: '#/components/parameters/request_id'
      - $ref: '#/components/parameters/view_id'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/rows'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/filter'

  /api/v2/widgets/item/{widget_id}:
    summary: Widget v2 api 
    description: >-
      Widget v2 api for CoViewed, CoBought, MLT
    get:
      summary: For fetching item-id based widgets like MLT, CoViewed, CoBought, RealtimeRecs
      description: >-
        Returns results for item_id based widgets like  MLT, CoViewed, CoBought, RealTimeRecs
      tags:
      - "widget"
      responses:
        '200':
          description: Widget Api Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetAPIResponse'
              examples:
                'Example 1 ':
                  $ref: '#/components/examples/WidgetResponseExample'
        '400':
          description: If the query parameters are incorrect/invalid
        '401':
          description: If an invalid auth-key as passed along with the request
        '404':
          description: Must send 404 if the widget id is not valid

    parameters:
    - $ref: '#/components/parameters/auth-key'
    - $ref: '#/components/parameters/widget_id'
    - $ref: '#/components/parameters/account_id'
    - $ref: '#/components/parameters/domain_key'
    - $ref: '#/components/parameters/_br_uid_2'
    - $ref: '#/components/parameters/url'
    - $ref: '#/components/parameters/item_ids'
    - $ref: '#/components/parameters/ref_url'
    - $ref: '#/components/parameters/request_id'
    - $ref: '#/components/parameters/view_id' 
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/rows'
    - $ref: '#/components/parameters/filter'
     
  /api/v2/widgets/category/{widget_id}:
    summary: Widget v2 api 
    description: >-
      Widget v2 api for recs, search, category
    get:
      summary: For fetching category-id based widget response like Category Search
      description: >-
        Returns results from category id based widgets like Category Search
      tags:
      - "widget"
      responses:
        '200':
          description: Widget Api Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetAPIResponse'
              examples:
                'Example 1 ':
                  $ref: '#/components/examples/WidgetResponseExample'
        '400':
          description: If the query parameters are incorrect/invalid
        '401':
          description: If an invalid auth-key as passed along with the request
        '404':
          description: Must send 404 if the widget id is not valid

    parameters:
    - $ref: '#/components/parameters/auth-key'
    - $ref: '#/components/parameters/widget_id'
    - $ref: '#/components/parameters/account_id'
    - $ref: '#/components/parameters/domain_key'
    - $ref: '#/components/parameters/_br_uid_2'
    - $ref: '#/components/parameters/url' 
    - $ref: '#/components/parameters/cat_id'
    - $ref: '#/components/parameters/ref_url'
    - $ref: '#/components/parameters/request_id'
    - $ref: '#/components/parameters/view_id' 
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/rows'
    - $ref: '#/components/parameters/start'
    - $ref: '#/components/parameters/sort'
    - $ref: '#/components/parameters/filter'
    - $ref: '#/components/parameters/segment'
    - $ref: '#/components/parameters/facet'

  /api/v2/widgets/keyword/{widget_id}:
    summary: Widget v2 api 
    description: >-
      Widget v2 api for recs, search, category
    get:
      summary: For fetching keyword based widget results like Search
      description: >-
        Returns results for keyword query based widgets like search
      tags:
      - "widget"
      responses:
        '200':
          description: Widget Api Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetAPIResponse'
              examples:
                'Example 1 ':
                  $ref: '#/components/examples/WidgetResponseExample' 
        '400':
          description: If the query parameters are incorrect/invalid
        '401':
          description: If an invalid auth-key as passed along with the request
        '404':
          description: Must send 404 if the widget id is not valid

    parameters:
    - $ref: '#/components/parameters/widget_id'
    - $ref: '#/components/parameters/auth-key'
    - $ref: '#/components/parameters/account_id'
    - $ref: '#/components/parameters/domain_key'
    - $ref: '#/components/parameters/_br_uid_2'
    - $ref: '#/components/parameters/url'
    - $ref: '#/components/parameters/query'
    - $ref: '#/components/parameters/ref_url'
    - $ref: '#/components/parameters/request_id'
    - $ref: '#/components/parameters/view_id' 
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/rows'
    - $ref: '#/components/parameters/start'
    - $ref: '#/components/parameters/sort'
    - $ref: '#/components/parameters/filter'
    - $ref: '#/components/parameters/segment'
    - $ref: '#/components/parameters/facet'

  /api/v2/widgets/personalized/{pp_search_category_widget_id}:
    summary: Widget v2 api 
    description: >-
      Widget v2 api for recs, search, category
    get:
      summary: For fetching user_id based personalized widget response like Past Purchases
      description: >-
        Returns matching results for personalized widgets like Past Purchases. Merchant tracked user info is required.
      tags:
      - "widget"
      responses:
        '200':
          description: Widget Api Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetAPIResponse'
              examples:
                'Example 1 ':
                  $ref: '#/components/examples/WidgetResponseExample'
        '400':
          description: If the query parameters are incorrect/invalid
        '401':
          description: If an invalid auth-key as passed along with the request
        '404':
          description: Must send 404 if the widget id is not valid

    parameters:
    - $ref: '#/components/parameters/pp_search_category_widget_id'
    - $ref: '#/components/parameters/auth-key'
    - $ref: '#/components/parameters/account_id'
    - $ref: '#/components/parameters/domain_key'
    - $ref: '#/components/parameters/_br_uid_2'
    - $ref: '#/components/parameters/url' 
    - $ref: '#/components/parameters/query'
    - $ref: '#/components/parameters/mandatory_user_id'
    - $ref: '#/components/parameters/ref_url'
    - $ref: '#/components/parameters/request_id'
    - $ref: '#/components/parameters/view_id'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/rows'
    - $ref: '#/components/parameters/start'
    - $ref: '#/components/parameters/sort'
    - $ref: '#/components/parameters/filter'
    - $ref: '#/components/parameters/segment'
    - $ref: '#/components/parameters/facet'

  /api/v2/widgets/personalized/{recently_viewed_widget_id}:
    summary: Widget v2 api
    description: >-
      Widget v2 api for Recently viewed
    get:
      summary: For fetching br_uid/user_id based recently viewed widget response.
      description: >-
        Returns matching results for personalized widgets like Recently Viewed Algo. Merchant tracked user info is required.
      tags:
        - "widget"
      responses:
        '200':
          description: Widget Api Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetAPIResponse'
              examples:
                'Example 1 ':
                  $ref: '#/components/examples/WidgetResponseExample'
        '400':
          description: If the query parameters are incorrect/invalid
        '401':
          description: If an invalid auth-key as passed along with the request
        '404':
          description: Must send 404 if the widget id is not valid

      parameters:
        - $ref: '#/components/parameters/_br_uid_2'
        - $ref: '#/components/parameters/account_id'
        - $ref: '#/components/parameters/auth-key'
        - $ref: '#/components/parameters/domain_key'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/optional_user_id'
        - $ref: '#/components/parameters/recently_viewed_widget_id'
        - $ref: '#/components/parameters/ref_url'
        - $ref: '#/components/parameters/request_id'
        - $ref: '#/components/parameters/rows'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/url'
        - $ref: '#/components/parameters/view_id'
